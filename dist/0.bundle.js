(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{120:function(e,s,t){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.MYMESSAGES_MODULE=void 0;var n=t(131),a=t(130),i=t(129),r=t(128),o=t(127),l=t(126),c=t(125),d=t(124),m=t(123),g=t(122),u=s.MYMESSAGES_MODULE=angular.module("mymessages",[]);u.directive("sortMessages",c.sortMessages),u.component("compose",n.compose),u.component("folderList",a.folderList),u.component("message",i.message),u.component("messageList",r.messageList),u.component("mymessages",o.mymessages),u.component("messageTable",l.messageTable),u.filter("messageBody",d.messageBody),u.service("MessageListUI",m.MessageListUI),u.config(["$stateRegistryProvider",function(e){e.register(g.composeState),e.register(g.messageState),e.register(g.messageListState),e.register(g.mymessagesState)}])},122:function(e,s,t){"use strict";Object.defineProperty(s,"__esModule",{value:!0});s.mymessagesState={parent:"shell",name:"mymessages",url:"/mymessages",resolve:{folders:["Folders",function(e){return e.all()}]},views:{mymessages:"mymessages"},data:{requiresAuth:!0},deepStateRedirect:{default:{state:"mymessages.messagelist"}},sticky:!0},s.messageListState={name:"mymessages.messagelist",url:"/:folderId",params:{folderId:"inbox"},resolve:{folder:["Folders","$stateParams",function(e,s){return e.get(s.folderId)}],messages:["Messages","folder",function(e,s){return e.byFolder(s)}]},views:{messagelist:"messageList"}},s.messageState={name:"mymessages.messagelist.message",url:"/:messageId",resolve:{message:["Messages","$stateParams",function(e,s){return e.get(s.messageId)}],nextMessageGetter:["MessageListUI","messages",function(e,s){return e.proximalMessageId.bind(e,s)}]},views:{"messagecontent@mymessages":{component:"message"}}},s.composeState={name:"mymessages.compose",url:"/compose",params:{message:{}},views:{"!$default.mymessages":"compose"}}},123:function(e,s,t){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),(s.MessageListUI=function(){function e(s,t){!function(e,s){if(!(e instanceof s))throw new TypeError("Cannot call a class as a function")}(this,e),this.$filter=s,this.AppConfig=t}return e.prototype.proximalMessageId=function(e,s){var t=this.$filter("orderBy")(e,this.AppConfig.sort),n=t.findIndex(function(e){return e._id===s}),a=t.length>n+1?n+1:n-1;return a>=0?t[a]._id:void 0},e}()).$inject=["$filter","AppConfig"]},124:function(e,s,t){"use strict";function n(e){return function(){var s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e.trustAsHtml(s.split(/\n/).map(function(e){return"<p>"+e+"</p>"}).join("\n"))}}Object.defineProperty(s,"__esModule",{value:!0}),s.messageBody=n,n.$inject=["$sce"]},125:function(e,s,t){"use strict";function n(e){return{restrict:"A",link:function(s,t,n){var a=n.sortMessages;if(a){var i=angular.element("<i style='padding-left: 0.25em' class='fa'></i>");t.append(i),t.on("click",function(s){return e.sort=e.sort==="+"+a?"-"+a:"+"+a}),s.$watch(function(){return e.sort},function(e){i.toggleClass("fa-sort-asc",e=="+"+a),i.toggleClass("fa-sort-desc",e=="-"+a)})}}}}Object.defineProperty(s,"__esModule",{value:!0}),s.sortMessages=n,n.$inject=["AppConfig"]},126:function(e,s,t){"use strict";Object.defineProperty(s,"__esModule",{value:!0});s.messageTable={bindings:{columns:"<",messages:"<"},controller:n,template:'\n  <md-card>\n    <md-card-contents>\n      <table>\n        <thead>\n          <tr>\n            <td ng-if="::$ctrl.colVisible(\'read\')"></td>\n            <td ng-if="::$ctrl.colVisible(\'from\')"     sort-messages="from">Sender</td>\n            <td ng-if="::$ctrl.colVisible(\'to\')"       sort-messages="to">Recipient</td>\n            <td ng-if="::$ctrl.colVisible(\'subject\')"  sort-messages="subject">Subject</td>\n            <td ng-if="::$ctrl.colVisible(\'date\')"     sort-messages="date">Date</td>\n          </tr>\n        </thead>\n    \n        <tbody>\n          <tr ng-repeat="message in $ctrl.messages | orderBy: $ctrl.AppConfig.sort track by message._id"\n              ui-sref=".message({messageId: message._id})" ui-sref-active="active">\n            <td ng-if="::$ctrl.colVisible(\'read\')"><i class="fa fa-circle" style="font-size: 50%" ng-show="!message.read"></td>\n            <td ng-if="::$ctrl.colVisible(\'from\')">{{ message.from }}</td>\n            <td ng-if="::$ctrl.colVisible(\'to\')">{{ message.to }}</td>\n            <td ng-if="::$ctrl.colVisible(\'subject\')">{{ message.subject }}</td>\n            <td ng-if="::$ctrl.colVisible(\'date\')">{{ message.date | date: "yyyy-MM-dd" }}</td>\n          </tr>\n        </tbody>\n    \n      </table>\n    </md-card-contents>\n  </md-card>\n'};function n(e){var s=this;this.AppConfig=e,this.colVisible=function(e){return-1!==s.columns.indexOf(e)}}n.$inject=["AppConfig"]},127:function(e,s,t){"use strict";Object.defineProperty(s,"__esModule",{value:!0});s.mymessages={bindings:{folders:"<"},template:'\n    <div layout="row" class="my-messages">\n    \n      \x3c!-- Show message folders --\x3e\n      <folder-list folders="$ctrl.folders"></folder-list>\n    \n      \x3c!-- A named view for the list of messages in this folder.  This will be  filled in by the \'mymessages.messagelist\' child state --\x3e\n      <div ui-view="messagelist" class="messagelist"> </div>\n    \n    </div>\n    \n    \x3c!-- A named ui-view for a message\'s contents.  The \'mymessages.messagelist.message\' grandchild state plugs into this ui-view --\x3e\n    <div layout="row" layout-fill" ui-view="messagecontent"></div>\n    '}},128:function(e,s,t){"use strict";Object.defineProperty(s,"__esModule",{value:!0});s.messageList={bindings:{folder:"<",messages:"<"},template:'\n    <div class="messages">\n      <message-table columns="$ctrl.folder.columns" messages="$ctrl.messages"></message-table>\n    </div>\n'}},129:function(e,s,t){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.message=void 0;var n=t(59);var a=function(e,s){return{from:s.to,to:s.from,subject:(t=e,n=s,t+n.subject),body:function(e){return"\n\n\n\n---------------------------------------\nOriginal message:\nFrom: "+e.from+"\nDate: "+e.date+"\nSubject: "+e.subject+"\n\n"+e.body}(s)};var t,n},i=function(){function e(s,t,n){!function(e,s){if(!(e instanceof s))throw new TypeError("Cannot call a class as a function")}(this,e),this.$state=s,this.DialogService=t,this.Messages=n}return e.prototype.$onInit=function(){this.message.read=!0,this.Messages.put(this.message),this.actions=this.folder.actions.reduce(function(e,s){return(0,n.setProp)(e,s,!0)},{})},e.prototype.reply=function(e){var s=a("Re: ",e);this.$state.go("mymessages.compose",{message:s})},e.prototype.forward=function(e){var s=a("Fwd: ",e);delete s.to,this.$state.go("mymessages.compose",{message:s})},e.prototype.editDraft=function(e){this.$state.go("mymessages.compose",{message:e})},e.prototype.remove=function(e){var s=this,t=this.nextMessageGetter(e._id),n=t?"mymessages.messagelist.message":"mymessages.messagelist",a={messageId:t};this.DialogService.confirm("Delete?",void 0).then(function(){return s.Messages.remove(e)}).then(function(){return s.$state.go(n,a,{reload:"mymessages.messagelist"})})},e}();i.$inject=["$state","DialogService","Messages"];s.message={bindings:{folder:"<",message:"<",nextMessageGetter:"<"},controller:i,template:'\n  <md-card flex>\n    <md-card-content>\n    <div class="header">\n      <div>\n        <h4>{{$ctrl.message.subject}}</h4>\n        <h5>{{$ctrl.message.from}} <i class="fa fa-long-arrow-right"></i> {{$ctrl.message.to}}</h5>\n      </div>\n  \n      <div class="line2">\n        <div>{{$ctrl.message.date | date: \'longDate\'}} {{$ctrl.message.date | date: \'mediumTime\'}}</div>\n        <div>\n          <md-button class="md-primary md-raised" ng-show="$ctrl.actions.edit" ng-click="$ctrl.editDraft($ctrl.message)"><i class="fa fa-pencil"></i> <span>Edit Draft</span></md-button>\n          <md-button class="md-primary md-raised" ng-show="$ctrl.actions.reply" ng-click="$ctrl.reply($ctrl.message)"><i class="fa fa-reply"></i> <span>Reply</span></md-button>\n          <md-button class="md-primary md-raised" ng-show="$ctrl.actions.forward" ng-click="$ctrl.forward($ctrl.message)"><i class="fa fa-forward" ></i> <span>Forward</span></md-button>\n          <md-button class="md-primary md-raised" ng-show="$ctrl.actions.delete" ng-click="$ctrl.remove($ctrl.message)"><i class="fa fa-close"></i> <span>Delete</span></md-button>\n        </div>\n      </div>\n    </div>\n  \n    \x3c!-- Pass the raw (plain text) message body through the messageBody filter to format slightly nicer. --\x3e\n    <div class="body" ng-bind-html="::$ctrl.message.body | messageBody"></div>\n    </md-card-content>\n  </md-card>\n'}},130:function(e,s,t){"use strict";Object.defineProperty(s,"__esModule",{value:!0});s.folderList={bindings:{folders:"<"},template:'\n  <md-card>\n   <md-list>\n    <md-divider></md-divider>\n    <md-list-item \n      ng-repeat="folder in $ctrl.folders"\n      ng-click="null"\n      ui-sref=".messagelist({folderId: folder._id})"\n      style="height:1.7em; min-height: initial;"\n      >\n        {{folder._id}}\n       \n      <md-divider></md-divider>\n    </md-list-item>\n  </md-list>\n  </md-card>\n  '}},131:function(e,s,t){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var n=function(){function e(s,t,n,a){!function(e,s){if(!(e instanceof s))throw new TypeError("Cannot call a class as a function")}(this,e),this.$state=s,this.DialogService=t,this.AppConfig=n,this.Messages=a}return e.prototype.$onInit=function(){this.pristineMessage=angular.extend({from:this.AppConfig.emailAddress},this.$stateParams.message),this.message=angular.copy(this.pristineMessage)},e.prototype.uiCanExit=function(){if(this.canExit||angular.equals(this.pristineMessage,this.message))return!0;return this.DialogService.confirm("You have not saved this message.","Navigate away and lose changes?","Yes","No")},e.prototype.gotoPreviousState=function(){var e=this.$transition$,s=!!e.from().name,t=s?e.from():"mymessages.messagelist",n=s?e.params("from"):{};this.$state.go(t,n)},e.prototype.send=function(e){var s=this;this.Messages.save(angular.extend(e,{date:new Date,read:!0,folder:"sent"})).then(function(){return s.canExit=!0}).then(function(){return s.gotoPreviousState()})},e.prototype.save=function(e){var s=this;this.Messages.save(angular.extend(e,{date:new Date,read:!0,folder:"drafts"})).then(function(){return s.canExit=!0}).then(function(){return s.gotoPreviousState()})},e}();n.$inject=["$state","DialogService","AppConfig","Messages"];s.compose={bindings:{$stateParams:"<",$transition$:"<"},controller:n,template:'\n    <div class="compose">\n      <div class="header">\n        <div class="flex-h"> <label>Recipient</label> <input type="text" id="to" name="to" ng-model="$ctrl.message.to"> </div>\n        <div class="flex-h"> <label>Subject</label> <input type="text" id="subject" name="subject" ng-model="$ctrl.message.subject"> </div>\n      </div>\n    \n      <div class="body">\n        <textarea name="body" id="body" ng-model="$ctrl.message.body" cols="30" rows="20"></textarea>\n        \n        <div class="buttons">\n          \x3c!-- Clicking this button brings the user back to the state they came from (previous state) --\x3e\n          <button class="btn btn-primary" ng-click="$ctrl.gotoPreviousState()"><i class="fa fa-times-circle-o"></i><span>Cancel</span></button>\n          <button class="btn btn-primary" ng-click="$ctrl.save($ctrl.message)"><i class="fa fa-save"></i><span>Save as Draft</span></button>\n          <button class="btn btn-primary" ng-click="$ctrl.send($ctrl.message)"><i class="fa fa-paper-plane-o"></i><span>Send</span></button>\n        </div>\n      </div>\n    </div>\n'}}}]);
//# sourceMappingURL=0.bundle.js.map