{"version":3,"sources":["webpack:///./app/components/prefs/prefs.module.js","webpack:///./app/components/prefs/prefs.states.js","webpack:///./app/components/prefs/prefs.component.js"],"names":["_prefs","__webpack_require__","_prefs2","PREFS_MODULE","angular","module","component","prefs","config","$stateRegistry","register","prefsState","parent","name","url","data","requiresAuth","PrefsController","AppConfig","_classCallCheck","this","$onInit","restDelay","reset","sessionStorage","clear","document","location","reload","savePrefs","extend","save","$inject","controller","template"],"mappings":"iKAAA,IAAAA,EAAAC,EAAA,KACAC,EAAAD,EAAA,KAEaE,iBAAeC,QAAQC,OAAO,YAE3CF,EAAaG,UAAU,QAAvBN,EAAAO,OAEAJ,EAAaK,QAAQ,yBAA0B,SAAUC,GACvDA,EAAeC,SAAfR,EAAAS,kGCLWA,cACXC,OAAQ,QACRC,KAAM,QACNC,IAAK,SACLR,UAAW,QAGXS,MAAQC,cAAc,2FCPlBC,aACJ,SAAAA,EAAYC,gGAAWC,CAAAC,KAAAH,GACrBG,KAAKF,UAAYA,qBAGnBG,mBACED,KAAKb,OACHe,UAAWF,KAAKF,UAAUI,wBAK9BC,iBACEC,eAAeC,QACfC,SAASC,SAASC,QAAO,gBAI3BC,qBACEzB,QAAQ0B,OAAOV,KAAKF,WAAaI,UAAWF,KAAKb,MAAMe,YAAaS,OACpEL,SAASC,SAASC,QAAO,SAG7BX,EAAgBe,SAAW,aAKdzB,SACX0B,WAAYhB,EAEZiB","file":"1.bundle.js","sourcesContent":["import {prefs} from \"./prefs.component\";\r\nimport {prefsState} from \"./prefs.states\";\r\n\r\nexport const PREFS_MODULE = angular.module('prefs', []);\r\n\r\nPREFS_MODULE.component('prefs', prefs);\r\n\r\nPREFS_MODULE.config(['$stateRegistryProvider', function ($stateRegistry) {\r\n  $stateRegistry.register(prefsState);\r\n}]);\r\n","/**\r\n * This state allows the user to set their application preferences\r\n */\r\nexport const prefsState = {\r\n  parent: 'shell',\r\n  name: 'prefs',\r\n  url: '/prefs',\r\n  component: 'prefs',\r\n\r\n  // Mark this state as requiring authentication.  See ../global/requiresAuth.hook.js.\r\n  data: { requiresAuth: true }\r\n};\r\n","/**\r\n * The controller for the prefs component.\r\n */\r\nclass PrefsController {\r\n  constructor(AppConfig) {\r\n    this.AppConfig = AppConfig\r\n  }\r\n\r\n  $onInit() {\r\n    this.prefs = {\r\n      restDelay: this.AppConfig.restDelay\r\n    }\r\n  }\r\n\r\n  /** Clear out the session storage */\r\n  reset() {\r\n    sessionStorage.clear();\r\n    document.location.reload(true);\r\n  }\r\n\r\n  /** After saving preferences to session storage, reload the entire application */\r\n  savePrefs() {\r\n    angular.extend(this.AppConfig, { restDelay: this.prefs.restDelay }).save();\r\n    document.location.reload(true);\r\n  }\r\n}\r\nPrefsController.$inject = ['AppConfig'];\r\n\r\n/**\r\n * A component which shows and updates app preferences\r\n */\r\nexport const prefs = {\r\n  controller: PrefsController,\r\n\r\n  template: `\r\n    <div layout-padding>\r\n      <div>\r\n        <md-button class=\"md-primary md-raised\" ng-click=\"$ctrl.reset()\">Reset All Data</md-button>\r\n      </div>\r\n      \r\n      <div>\r\n        <label for=\"restDelay\">Simulated REST API delay (ms)</label>\r\n        <input type=\"text\" name=\"restDelay\" ng-model=\"$ctrl.prefs.restDelay\">\r\n        <md-button class=\"md-primary md-raised\" ng-click=\"$ctrl.savePrefs()\">Save</md-button>\r\n      </div>\r\n    </div>\r\n`};"],"sourceRoot":""}